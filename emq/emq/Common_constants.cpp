/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "Common_constants.h"

namespace emq { namespace common {

const CommonConstants g_Common_constants;

CommonConstants::CommonConstants() {
  ERROR_BACKOFF.insert(std::make_pair((ErrorCode::type)15, 1000LL));
  ERROR_BACKOFF.insert(std::make_pair((ErrorCode::type)18, 1000LL));
  ERROR_BACKOFF.insert(std::make_pair((ErrorCode::type)16, 1000LL));
  ERROR_BACKOFF.insert(std::make_pair((ErrorCode::type)17, 1000LL));
  ERROR_BACKOFF.insert(std::make_pair((ErrorCode::type)7, 1000LL));
  ERROR_BACKOFF.insert(std::make_pair((ErrorCode::type)14, 1000LL));
  ERROR_BACKOFF.insert(std::make_pair((ErrorCode::type)19, 1000LL));

  ERROR_RETRY_TYPE.insert(std::make_pair((ErrorCode::type)15, (RetryType::type)0));
  ERROR_RETRY_TYPE.insert(std::make_pair((ErrorCode::type)18, (RetryType::type)0));
  ERROR_RETRY_TYPE.insert(std::make_pair((ErrorCode::type)16, (RetryType::type)0));
  ERROR_RETRY_TYPE.insert(std::make_pair((ErrorCode::type)17, (RetryType::type)0));
  ERROR_RETRY_TYPE.insert(std::make_pair((ErrorCode::type)7, (RetryType::type)0));
  ERROR_RETRY_TYPE.insert(std::make_pair((ErrorCode::type)14, (RetryType::type)1));
  ERROR_RETRY_TYPE.insert(std::make_pair((ErrorCode::type)19, (RetryType::type)2));

  MAX_RETRY = 3;

}

}} // namespace

